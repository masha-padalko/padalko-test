Задание 1:
Необходимо сверстать две страницы. Обе страницы должны основываться на одном и том же лайауте и иметь один и тот же css. Недостающие данные придумать самостоятельно. 
Исходные файлы: 
  



Задание 2:
Реализовать страницу по макету. Обратить внимание, на то, что всплывающее окно открывается по нажатию на аватар пользователя и на имя пользователя. Положение аватара и имени не должно визуально меняться. Недостающие данные придумать самостоятельно. 
Исходный файлы: mockup.psd​, ​1.png, 2.png

Задание 3:
Реализовать джиквери-плагин, который находит на странице все теги с атрибутом data-interval в котором через запятую перечислены даты в формате ISO 8601. Необходимо внутрь тега вставить текст, понятный для человека, описывающий этот интервал. 

Пример. Для тега
<time data-interval="2012-08-14T20:03Z,2012-08-15T19:40Z,2012-08-16T19:40Z,2012-08-18T08:15Z"></time>
на выходе должно получиться:
<time data-interval="2012-08-14T20:03Z,2012-08-15T19:40Z,2012-08-16T19:40Z,2012-08-18T08:15Z">Aug 14 - 18, 4 days</time>
Для интервалов с днями в разных месяцах, рядом со второй датой необходимо ставить имя месяца. Для интервала, пересекающим начало года, рядом с первой и второй датой должен стоять год.
Недостающие данные, впрочем как и дополнительные возможности для плагина придумать самостоятельно.

Задание 4:
Используя css-фреймворк твиттер-бутстрап, необходимо сверстать страницу. Страница должна быть резиновой и неограниченной по ширине. Правая колонка - колонка с баннерами - не должна изменяться по ширине. Каждый блок в основной части имеет фиксированую ширину. Желтизна и увеличенный размер блока является свойством каждой записи. Недостающие данные придумать самостоятельно. 
Исходный файл: ​1.png

Задание 5:
Самостоятельно, без использования сторонних библиотек кроме джиквери, реализовать функциональность всплывающей подсказки. Данные подсказки могут быть привязаны к любому дом-элементу, время задержки перед показом подстказки должно настраиваться. Текст подсказки необходимо задавать отдельно для каждого элемента через дата-атрибуты. Внешний вид подсказки, впрочем как и поведение, можно увидеть на github.com
Всю функциональность необходимо оформить в виде джиквери-плагина.
Исходные файлы:​ 1.png, 2.png

Весь исходный код необходимо разместить в гитхаб-репозиториях. Все возникшие вопросы можно задать мне через электронную почту.

Вместо эпилога:
Несколько полезных рекомендаций вне зависимости от результата тестового задания. Исходя из представленных работ в резюме, можно предположить ваш уровень навыков и порекомендовать вам освоить следующие навыки:
 - выучить javascript. Хорошая книга для начала - "JavaScript. Подробное руководство, 5-е издание" Дэвида Флэнагана
 - изучить работу с джаваскрипт-фреймворками. Начать можно с джиквери, и книги о этом фреймворке - "jQuery в действии" Иуды Каца.
 - взять на вооружение инструменты, облегчающие написание CSS. Такие как SASS или LESS. Как видно из ваших работ с LESS вы уже успели ознакомиться.
 - ознакомиться с CSS-фреймворками, такими как твиттер-бутстрап, компас, html5boilerplate и т.д.

Также, рекомендую ознакомиться с общеобразовательными книгами в сфере веб-программирования: "Отзывчивый веб-дизайн" Итана Маркотта (книга на английском), "Ководство" Артемия Лебедева, "Экстремальное программирование" Кента Бэка. Кроме того, принципы алгоритмизации и базовые понятия и принципы алгоритмов также будут весьма полезны вам в вашей дальнейшей работе вне зависимости от исхода собеседования. Рекомендуем начать изучение с книги SICP. Есть русская версия.
В качестве дальнейшего развития, можно будет взяться за книгу "Гибкая разработка в среде Rails" Девида Хенсона. Книга специфична для работы с "руби он рейлс" средой, и необходима только после получения базовых знаний, описанных выше.